{-# LANGUAGE OverloadedStrings#-}

module Main where

import Gauge

import Bytezap.Json
import Data.Text qualified as T

xPlain32b :: T.Text
xPlain32b = "12345678123456781234567812345678"

xPlain256b :: T.Text
xPlain256b = "1234567812345678123456781234567123456781234567812345678123456712345678123456781234567812345671234567812345678123456781234567123456781234567812345678123456712345678123456781234567812345671234567812345678123456781234567888888812345678123456781234567812345678"

xPlainHuge :: T.Text
xPlainHuge

main :: IO ()
main = defaultMain
  [ bgroup "JSON text escaping"
    [ bgroup "64b"
      [ bench "w 8"  $ whnf escapedLength8 xPlain32b
      , bench "w64"  $ whnf escapedLength8 xPlain32b
      ]
    , bgroup "256b"
      [ bench "w 8"  $ whnf escapedLength8 xPlain256b
      , bench "w64"  $ whnf escapedLength8 xPlain256b
      ]
    , bgroup "huge"
      [ bench "w 8"  $ whnf escapedLength8 xPlainHuge
      , bench "w64"  $ whnf escapedLength8 xPlainHuge
      ]
    ]
  ]

